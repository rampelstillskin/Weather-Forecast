{"version":3,"sources":["Images/weatherBackgroundImages/cloud.jpg","Images/weatherBackgroundImages/morning1.jpg","Images/weatherBackgroundImages/rainMorning.jpg","Images/weatherBackgroundImages/snowStorm.jpg","Images/weatherBackgroundImages/stormMorning.jpg","Images/weatherBackgroundImages/day.jpg","Images/weatherBackgroundImages/night.jpg","Components/weatherBlock/cards/MainCard.jsx","Components/weatherBlock/cards/FiveDaysCards.jsx","Components/weatherBlock/WeatherBlock.jsx","Components/weatherGenerator/WeatherGenerator.jsx","App.js","index.jsx"],"names":["module","exports","sunTime","time","unixSunrise","Date","hours","getHours","slice","minute","getMinutes","mainCard","props","data","nameCity","currentTemperature","cloudiness","icon","humidity","sunrise","sunset","wind","pressure","roundingTemperature","Math","round","className","src","alt","speed","daysWeek","FiveDaysCards","fiveDays","map","day","weather","key","dt_txt","converterUnixTime","dayWeek","getDay","dayMonth","getDate","getDayWeek","dt","main","temp","description","WeatherBlock","city","MainCard","onSubmit","handleSubmit","type","name","placeholder","value","onChange","handleChange","autoComplete","API_KEY","WeatherGenerator","weatherBackground","weatherConditions","state","stormMorning","rainMorning","snowStorm","morning1","cloud","weatherBackgroundDayOrNight","hour","night","event","target","setState","preventDefault","myInit","method","mode","requestCurrentDay","fetch","requestFiveDays","Promise","all","then","elements","response","json","currentDay","fiveDaysData","list","filter","includes","maxTemperature","temp_max","sys","currentDayData","catch","error","console","alert","minTemperature","style","this","background","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55f5bdd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud.6327bf5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/morning1.c4b2ded2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rainMorning.b25ecc0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snowStorm.a25d559a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stormMorning.141c3507.jpg\";","module.exports = __webpack_public_path__ + \"static/media/day.20b2334b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night.fed4845f.jpg\";","import React from 'react';\r\n\r\nfunction sunTime(time) {\r\n    const unixSunrise = new Date(time * 1000),\r\n        hours = ('0' + unixSunrise.getHours()).slice(-2),\r\n        minute = ('0' + unixSunrise.getMinutes()).slice(-2);\r\n    return `${hours}:${minute}`;\r\n}\r\n\r\nfunction mainCard(props) {\r\n    const {\r\n        nameCity,\r\n        currentTemperature,\r\n        cloudiness,\r\n        icon,\r\n        humidity,\r\n        sunrise,\r\n        sunset,\r\n        wind,\r\n        pressure,\r\n    } = props.data;\r\n    const roundingTemperature = Math.round(currentTemperature);\r\n\r\n    return (\r\n        <div className=\"weather-card\">\r\n            <h1 className=\"weather-card__title\">{nameCity}</h1>\r\n            <p className=\"weather-card__currently\">\r\n                {icon ? (\r\n                    <img\r\n                        src={icon}\r\n                        alt=\"weather icon\"\r\n                        className=\"weather-card__currently-icon\"\r\n                    />\r\n                ) : null}\r\n                {currentTemperature ? (\r\n                    <span>{roundingTemperature}°</span>\r\n                ) : null}\r\n            </p>\r\n            <p className=\"weather-card__data cloudiness\">{cloudiness}</p>\r\n            {humidity ? (\r\n                <p className=\"weather-card__list-data\">\r\n                    <span className=\"weather-card__item-data wind\">\r\n                        Wind speed: {wind.speed} м/с\r\n                    </span>\r\n                    <span className=\"weather-card__item-data\">\r\n                        Humidity: {humidity}\r\n                    </span>\r\n                    <br />\r\n                    <span className=\"weather-card__item-data\">\r\n                        Pressure: {pressure} mbar\r\n                    </span>\r\n                </p>\r\n            ) : null}\r\n            {sunrise && sunset ? (\r\n                <div className=\"weather-card__sun-wrapper\">\r\n                    <p className=\"weather-card__sun sunrise\">\r\n                        <span className=\"weather-card__sun-data sun-card\">\r\n                            Sunrise:{' '}\r\n                        </span>\r\n                        {sunTime(sunrise)}\r\n                    </p>\r\n                    <p className=\"weather-card__sun sunset\">\r\n                        <span className=\"weather-card__sun-data sun-card\">\r\n                            Sunset:{' '}\r\n                        </span>\r\n                        {sunTime(sunset)}\r\n                    </p>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default mainCard;\r\n","import React from 'react';\r\nimport './fiveDaysCards.scss';\r\n\r\nconst daysWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\nconst getDayWeek = time => {\r\n  const converterUnixTime = new Date(time * 1000);\r\n  const dayWeek = daysWeek[converterUnixTime.getDay()];\r\n  const dayMonth = converterUnixTime.getDate();\r\n  return `${dayWeek} ${dayMonth}`;\r\n};\r\n\r\nfunction FiveDaysCards(props) {\r\n  return (\r\n    <div className=\"five-cards__wrapper\">\r\n      <ul className=\"five-cards__list\">\r\n        {props.data.fiveDays.map(day => {\r\n          const icon = `https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`;\r\n\r\n          return (\r\n            <li className=\"five-cards__item\" key={day.dt_txt}>\r\n              <span>{getDayWeek(day.dt)}</span>\r\n              <img src={icon} alt=\"icon weather\" />\r\n              <p className=\"five-cards__temp\">\r\n                <span className=\"five-cards__temp-item\">\r\n                  {Math.round(day.main.temp)}°\r\n                </span>\r\n              </p>\r\n              <span className=\"five-cards__item--description\">\r\n                {day.weather[0].description}\r\n              </span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FiveDaysCards;\r\n","import React from 'react';\r\nimport MainCard from './cards/MainCard';\r\nimport FiveDaysCards from './cards/FiveDaysCards';\r\nimport './weatherBlock.scss';\r\n\r\nfunction WeatherBlock(props) {\r\n  const { city } = props.data;\r\n\r\n  return (\r\n    <div className=\"weather-block\">\r\n      <MainCard data={props.data} />\r\n      <FiveDaysCards data={props.data} />\r\n      <form className=\"weather-form\" onSubmit={props.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"city\"\r\n          className=\"weather-form__input\"\r\n          placeholder=\"City name\"\r\n          value={city}\r\n          onChange={props.handleChange}\r\n          autoComplete=\"off\"\r\n        />\r\n        <button type=\"submit\" className=\"weather-form__button\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherBlock;\r\n","import React, { Component } from 'react';\r\nimport WeatherBlock from '../weatherBlock/WeatherBlock';\r\nimport '../../index.scss';\r\n\r\nimport cloud from '../../Images/weatherBackgroundImages/cloud.jpg';\r\nimport morning1 from '../../Images/weatherBackgroundImages/morning1.jpg';\r\nimport rainMorning from '../../Images/weatherBackgroundImages/rainMorning.jpg';\r\nimport snowStorm from '../../Images/weatherBackgroundImages/snowStorm.jpg';\r\nimport stormMorning from '../../Images/weatherBackgroundImages/stormMorning.jpg';\r\nimport day from '../../Images/weatherBackgroundImages/day.jpg';\r\nimport night from '../../Images/weatherBackgroundImages/night.jpg';\r\n\r\n// import cityList from './city.list.json';\r\n\r\nconst API_KEY = 'd1663099de2c72e24962a3ac1d663db6';\r\n\r\nclass WeatherGenerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      city: '',\r\n      nameCity: '',\r\n      currentTemperature: '',\r\n      minTemperature: '',\r\n      maxTemperature: '',\r\n      cloudiness: '',\r\n      humidity: '',\r\n      sunrise: '',\r\n      sunset: '',\r\n      wind: '',\r\n      pressure: '',\r\n      weatherConditions: '',\r\n      fiveDays: [],\r\n      currentDayData: '',\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    \r\n  }\r\n\r\n  weatherBackground = weatherConditions => {\r\n    if (this.state.nameCity) {\r\n      switch (weatherConditions) {\r\n        case 'Thunderstorm':\r\n          return `${stormMorning}`;\r\n        case 'Drizzle':\r\n        case 'Rain':\r\n          return `${rainMorning}`;\r\n        case 'Snow':\r\n          return `${snowStorm}`;\r\n        case 'Clear':\r\n          return `${morning1}`;\r\n        case 'Clouds':\r\n          return `${cloud}`;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  weatherBackgroundDayOrNight = () => {\r\n    let d = new Date();\r\n    let hour = d.getHours();\r\n\r\n    if (hour > 7 && hour < 18) {\r\n      return day;\r\n    }\r\n    return night;\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const myInit = { method: 'GET', mode: 'cors' };\r\n    const requestCurrentDay = fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=metric&appid=${API_KEY}`,\r\n      myInit\r\n    );\r\n    const requestFiveDays = fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?q=${this.state.city}&units=metric&appid=${API_KEY}`,\r\n      myInit\r\n    );\r\n\r\n    if (this.state.city) {\r\n      Promise.all([requestCurrentDay, requestFiveDays]).then(elements => {\r\n        return Promise.all(elements.map(response => response.json()))\r\n          .then(([currentDay, fiveDays]) => {\r\n            const fiveDaysData = fiveDays.list.filter(value =>\r\n              value.dt_txt.includes('15:00:00')\r\n            );\r\n\r\n            this.setState({\r\n              nameCity: currentDay.name,\r\n              currentTemperature: currentDay.main.temp,\r\n              maxTemperature: `${currentDay.main.temp_max}°`,\r\n              cloudiness: currentDay.weather[0].description,\r\n              humidity: `${currentDay.main.humidity}%`,\r\n              sunrise: currentDay.sys.sunrise,\r\n              sunset: currentDay.sys.sunset,\r\n              wind: currentDay.wind,\r\n              pressure: currentDay.main.pressure,\r\n              weatherConditions: currentDay.weather[0].main,\r\n              currentDayData: currentDay.weather[0].icon,\r\n              fiveDays: fiveDaysData,\r\n              icon: `https://openweathermap.org/img/wn/${currentDay.weather[0].icon}@2x.png`,\r\n            });\r\n          })\r\n          .catch(error => console.error(`Error: ${error}`));\r\n      });\r\n    } else {\r\n      alert('Please enter a city name');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section\r\n        className=\"weather-block__wrapper\"\r\n        style={\r\n          !this.state.nameCity\r\n            ? { background: `url(${this.weatherBackgroundDayOrNight()})` }\r\n            : {\r\n                background: `url(${this.weatherBackground(\r\n                  this.state.weatherConditions\r\n                )})`,\r\n              }\r\n        }\r\n      >\r\n        <WeatherBlock\r\n          data={this.state}\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherGenerator;\r\n","import React from 'react';\nimport WeatherGenerator from './Components/weatherGenerator/WeatherGenerator';\n\nfunction App() {\n  return <WeatherGenerator />;\n}\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}